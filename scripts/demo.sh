#!/bin/bash

set -e

echo "üö® Complete DNS Poisoning Attack Demo üö®"
echo "=========================================="

# Create required directories
mkdir -p proxy upstream scripts certs

# Setup permissions
chmod +x scripts/mkcert.sh upstream/init.sh 2>/dev/null || true

# Generate certificates
echo "1Ô∏è‚É£ Generating SSL certificates..."
bash scripts/mkcert.sh

# Start containers
echo ""
echo "2Ô∏è‚É£ Starting attack infrastructure..."
docker-compose down 2>/dev/null || true
docker-compose up -d

# Wait for startup
echo ""
echo "3Ô∏è‚É£ Waiting for containers to initialize..."
sleep 5

# Test all endpoints
echo ""
echo "4Ô∏è‚É£ Testing all attack vectors..."

# Quick endpoint tests
endpoints=(
    "http://localhost/:DNS Poisoning:HTTP attack site"
    "https://localhost:8443/fake-victim:Secure:Fake HTTPS site"  
    "https://localhost:9443/secure:REAL victim.local:Legitimate site"
)

for endpoint in "${endpoints[@]}"; do
    IFS=':' read -r url expected desc <<< "$endpoint"
    echo -n "Testing $desc... "
    if curl -k -s --max-time 5 "$url" | grep -q "$expected"; then
        echo "‚úÖ"
    else
        echo "‚ùå Failed"
    fi
done

echo ""
echo "üéØ COMPLETE ATTACK DEMO READY!"
echo "==============================="
echo ""
echo "üì± For Play with Docker, use these URLs:"
echo ""
echo "üîó Attack Flow:"
echo "   1Ô∏è‚É£ DNS Poisoning (HTTP):     http://ip...-80.direct.labs.play-with-docker.com/"
echo "   2Ô∏è‚É£ Fake HTTPS Site:          https://ip...-8443.direct.labs.play-with-docker.com/"
echo "   3Ô∏è‚É£ Legitimate Site:          https://ip...-9443.direct.labs.play-with-docker.com/"
echo ""
echo "üé≠ Attack Scenarios:"
echo "   ‚Ä¢ HTTP Credential Harvesting:  /phish"
echo "   ‚Ä¢ HTTPS Certificate Spoofing:  /fake-victim"
echo "   ‚Ä¢ Legitimate Site Comparison:  /secure"
echo ""
echo "üí° Demo Flow:"
echo "   1. Start at HTTP site (DNS poisoning)"
echo "   2. Try HTTP phishing attack"
echo "   3. Move to fake HTTPS site (certificate spoofing)"
echo "   4. Compare with real legitimate site"
echo "   5. Notice the certificate differences!"
echo ""
echo "üîç Key Learning Points:"
echo "   ‚Ä¢ DNS poisoning can downgrade HTTPS to HTTP"
echo "   ‚Ä¢ Attackers can serve fake HTTPS sites with wrong certificates"
echo "   ‚Ä¢ Users often ignore certificate warnings"
echo "   ‚Ä¢ HSTS helps prevent protocol downgrade attacks"
echo "   ‚Ä¢ Always verify certificate domain matches URL"

echo ""
echo "üìä Container Status:"
docker-compose ps

echo ""
echo "üöÄ Demo is ready! Open the URLs above to start the attack simulation."