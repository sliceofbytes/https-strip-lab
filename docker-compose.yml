services:
  # HTTP Proxy - Handles the downgrade attack
  proxy:
    image: nginx:alpine
    container_name: downgrade_proxy
    ports: 
      - "80:80"      # HTTP - Where victims land when HTTPS fails
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    networks: 
      - attack_net

  # Attacker's HTTPS Site - Looks legitimate with valid cert
  attacker_https:
    image: nginx:alpine
    container_name: attacker_https_site
    ports:
      - "8443:8443"  # HTTPS - Attacker's "legitimate" site
    environment:
      HSTS: "on"
      HSTS_HEADER: "max-age=31536000; includeSubDomains; preload"
    volumes:
      - ./upstream/nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - ./upstream/index.html:/usr/share/nginx/html/index.html:ro
      - ./certs:/etc/nginx/certs:ro
      - ./upstream/init.sh:/docker-entrypoint.d/10-init-hsts.sh:ro
    healthcheck:
      test: ["CMD", "sh", "-c", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -kfs https://localhost:8443/victim-site"]
      interval: 5s
      timeout: 3s
      retries: 12
    networks:
      attack_net:
        aliases:
          - attacker_https
    restart: unless-stopped

networks:
  attack_net: